input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-j-9.2.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://host.docker.internal:3306/elk_dev"
    jdbc_user => "llddlocal"
    jdbc_password => "root"

    # 실행할 SQL 쿼리
    statement => "SELECT * FROM post"

    # 30초마다 실행
    schedule => "*/30 * * * * *"

    # SQL 로깅 관련 설정
    sql_log_level => "debug"

    # 데이터 변경 감지를 위한 설정
    tracking_column => "id"  # 변경 감지를 위한 컬럼
    use_column_value => true  # tracking_column의 값을 사용
    record_last_run => true  # 마지막 실행 정보를 저장
    last_run_metadata_path => "/usr/share/logstash/last-run.metadata"  # 마지막 실행 정보를 저장할 경로
    type => "mysql"  # 데이터 변경 감지를 위한 타입
  }

  tcp {
    port => 5001
    codec => json_lines
    type => "spring-boot-log"
  }
}

filter {
  if [type] == "spring-boot-log" {
    date {
      match => ["@timestamp", "ISO8601"]
    }
  } else if [type] == "mysql" {
    mutate {
      remove_field => ["@version", "jdbc_connection_string", "jdbc_user", "jdbc_password"]
    }
  }
}

output {
  if [type] == "spring-boot-log" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "springlogs-%{+YYYY.MM}"
    }
    stdout {
      codec => rubydebug
    }
  } else if [type] == "mysql" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "app1_posts"
      document_id => "%{id}"
    }
    stdout {
      codec => rubydebug { metadata => true }
    }
  }
}